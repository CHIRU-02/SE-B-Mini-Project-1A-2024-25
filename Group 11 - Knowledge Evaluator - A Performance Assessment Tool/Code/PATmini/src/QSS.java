
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.util.Scanner;
import javax.swing.JOptionPane;
import java.beans.Statement;
import java.io.BufferedReader;
import patmini.asname;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Varunkumar lysetti
 */
public class QSS extends javax.swing.JFrame {

    Connection conn= user_db_connection.connect();
    PreparedStatement pst=null;
    /**
     * Creates new form QSS
     */
    public QSS() {
        initComponents();
        try {
        conn = user_db_connection.connect();
        if (conn == null) {
            JOptionPane.showMessageDialog(this, "Failed to connect to the database.");
            System.exit(1); // Exit if the connection is not established
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error connecting to the database: " + e.getMessage());
        e.printStackTrace();
        System.exit(1); // Exit if there was an error
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        question = new javax.swing.JTextField();
        opt2 = new javax.swing.JTextField();
        opt3 = new javax.swing.JTextField();
        opt1 = new javax.swing.JTextField();
        opt4 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        opt5 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 255));
        jLabel1.setText("Q.No. 1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, 150, -1));

        question.setBackground(new java.awt.Color(153, 153, 255));
        question.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                questionActionPerformed(evt);
            }
        });
        getContentPane().add(question, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 90, 420, 80));

        opt2.setBackground(new java.awt.Color(153, 153, 255));
        getContentPane().add(opt2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, 390, -1));

        opt3.setBackground(new java.awt.Color(153, 153, 255));
        getContentPane().add(opt3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 270, 390, -1));

        opt1.setBackground(new java.awt.Color(153, 153, 255));
        getContentPane().add(opt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 190, 390, -1));

        opt4.setBackground(new java.awt.Color(153, 153, 255));
        opt4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opt4ActionPerformed(evt);
            }
        });
        getContentPane().add(opt4, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 310, 390, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 255));
        jLabel3.setText("QUESTIONS & ANSWERS");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, 290, -1));

        jButton2.setBackground(new java.awt.Color(204, 204, 255));
        jButton2.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jButton2.setText("Next");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 410, -1, -1));

        jButton3.setBackground(new java.awt.Color(204, 204, 255));
        jButton3.setFont(new java.awt.Font("Segoe UI Black", 0, 12)); // NOI18N
        jButton3.setText("BACK");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 410, -1, -1));

        opt5.setBackground(new java.awt.Color(153, 153, 255));
        opt5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opt5ActionPerformed(evt);
            }
        });
        getContentPane().add(opt5, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 350, 390, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 255));
        jLabel2.setText("Option - 1");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 190, 70, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 153, 255));
        jLabel4.setText("Option - 2");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 230, 70, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 153, 255));
        jLabel5.setText("Option - 3");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 270, 70, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 153, 255));
        jLabel6.setText("Option - 4");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 310, 70, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 153, 255));
        jLabel7.setText("Answer");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 350, 50, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picsart_24-09-01_22-01-15-634.png"))); // NOI18N
        jLabel8.setText("jLabel8");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 470));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
private int questionCounter = 0;
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      
    String Question = question.getText();
    String option1 = opt1.getText();
    String option2 = opt2.getText();
    String option3 = opt3.getText();
    String option4 = opt4.getText();
    String option5 = opt5.getText();
    
    // Check if opt5 matches any of the options
    String correctAnswerColumn = null;
    
    if (option1.equals(option5)) {
        correctAnswerColumn = opt1.getText();
    } else if (option2.equals(option5)) {
        correctAnswerColumn = opt2.getText();
    } else if (option3.equals(option5)) {
        correctAnswerColumn = opt3.getText();
    } else if (option4.equals(option5)) {
        correctAnswerColumn = opt4.getText();
    }

    if (correctAnswerColumn != null) {
        if (questionCounter < 5) { // Check if we have added less than 5 questions
            try {
                // Read the value from asname.assname
                String asnameValue = readAsnameValue();

                String q = "INSERT INTO ques(question, opt1, opt2, opt3, opt4, answer, asname) VALUES(?, ?, ?, ?, ?, ?, ?)";
                pst = conn.prepareStatement(q);
                pst.setString(1, Question);
                pst.setString(2, option1);
                pst.setString(3, option2);
                pst.setString(4, option3);
                pst.setString(5, option4);
                pst.setString(6, correctAnswerColumn);  // Store the name of the correct answer column
                pst.setString(7, asnameValue); // Store the value from asname.assname

                pst.execute();
                JOptionPane.showMessageDialog(this, "Question added successfully");

                // Clear text fields
                question.setText("");
                opt1.setText("");
                opt2.setText("");
                opt3.setText("");
                opt4.setText("");
                opt5.setText("");

                // Update question number
                String currentLabelText = jLabel1.getText(); // e.g., "Q.No. 1"
                String[] parts = currentLabelText.split(" "); // Split by space
                
                int currentQuestionNumber = 0; // Default value
                
                // Attempt to parse the question number from the label
                try {
                    if (parts.length == 3) {
                        currentQuestionNumber = Integer.parseInt(parts[2]); // Extract the number
                    } else if (parts.length == 2 && parts[0].equals("Q.No.")) {
                        currentQuestionNumber = Integer.parseInt(parts[1]); // Extract the number
                    } else {
                        // Log the unexpected format for debugging
                        System.out.println("Unexpected label format: " + currentLabelText);
                        JOptionPane.showMessageDialog(this, "Unexpected label format!"); 
                        return; // Exit the method to avoid further errors
                    }
                } catch (NumberFormatException e) {
                    System.out.println("Error parsing number from label: " + currentLabelText);
                    JOptionPane.showMessageDialog(this, "Error parsing question number!"); 
                    return; // Exit the method to avoid further errors
                }
                
                currentQuestionNumber++; // Increment
                jLabel1.setText("Q.No. " + currentQuestionNumber); // Update label text
                questionCounter++; // Increment the question counter

            } catch (Exception e) {
                System.out.println("ERROR! " + e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "You have already added 5 questions. Closing now.");
            this.dispose(); // Close the application or current window
        }
    } else {
        JOptionPane.showMessageDialog(this, "The answer must be one of the options!");
    }
}

// Method to read the value from asname.assname
private String readAsnameValue() {
    StringBuilder content = new StringBuilder();
    try (BufferedReader reader = new BufferedReader(new FileReader("asname.assname"))) {
        String line;
        while ((line = reader.readLine()) != null) {
            content.append(line).append("\n");
        }
    } catch (IOException e) {
        System.out.println("Error reading asname.assname: " + e.getMessage());
        return ""; // Return an empty string if there's an error
    }
    return content.toString().trim(); // Return the content without trailing newline

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        addp1 b=new addp1();
        b.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void questionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_questionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_questionActionPerformed

    private void opt5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opt5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_opt5ActionPerformed

    private void opt4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opt4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_opt4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QSS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QSS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QSS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QSS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QSS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField opt1;
    private javax.swing.JTextField opt2;
    private javax.swing.JTextField opt3;
    private javax.swing.JTextField opt4;
    private javax.swing.JTextField opt5;
    private javax.swing.JTextField question;
    // End of variables declaration//GEN-END:variables
}
